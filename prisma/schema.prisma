// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  username         String          @unique
  password         String
  sentMessages     Message[]       @relation(name: "sentMessages")
  receivedMessages Message[]       @relation(name: "receivedMessages")
  sentRequests     FriendRequest[] @relation(name: "sentRequests")
  receivedRequests FriendRequest[] @relation(name: "receivedRequests")
  roomIds          String[]        @db.ObjectId
  rooms            Room[]          @relation(fields: [roomIds], references: [id])
  friends          Friend[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model Message {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  message     String
  senderId    String @db.ObjectId
  recipientId String @db.ObjectId
  roomId      String @db.ObjectId
  sender      User   @relation(name: "sentMessages", fields: [senderId], references: [id])
  recipient   User   @relation(name: "receivedMessages", fields: [recipientId], references: [id])
  chatRoom    Room   @relation(fields: [roomId], references: [id])
}

model Room {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  roomName    String
  userIds     String[]  @db.ObjectId
  users       User[]    @relation(fields: [userIds], references: [id])
  messageList Message[]
}

model Friend {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  friendId String @db.ObjectId
  friend   User   @relation(fields: [friendId], references: [id])
}

model FriendRequest {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  senderId    String @unique @db.ObjectId
  recipientId String @unique @db.ObjectId
  sender      User   @relation(name: "sentRequests", fields: [senderId], references: [id])
  recipient   User   @relation(name: "receivedRequests", fields: [recipientId], references: [id])
}
